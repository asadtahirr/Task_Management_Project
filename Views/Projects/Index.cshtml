@model PaginatedList<project_management_system.Models.Projects.ViewModels.ProjectDetailsViewModel>

@{
    List<string> myList = new List<string>() { "Hi", "Hello" };
}

<h1>Projects</h1>

@foreach (ProjectDetailsViewModel projectDetails in Model)
{
    <div>
        <p>@projectDetails.Id</p>
        <p>@projectDetails.Title</p>
        <p>@projectDetails.CreatedByName</p>
        <p>@projectDetails.CreatedById</p>
        <p>@projectDetails.NumberOfProjectTasks</p>

        @foreach (ProjectTask projectTask in projectDetails.ProjectTasks)
        {
            <p>@projectTask.Title</p>
            
        }
    </div>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex - 1)"
    class="btn btn-default @prevDisabled">
    <button>Previous</button>
</a>
<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex + 1)"
    class="btn btn-default @nextDisabled">
    <button>Next</button>
</a>
